interface Moveable {
void move();
}
interface Stopable {
void stop();
}
abstract class Car {
_________public Engine engine; - открытое поле нарушение инкапсуляции
private String color;
private String name;
protected void start() {
System.out.println("Car starting");
}
abstract void open();

class Lorry extends Car, Moveable, Stopable {
________для наследования интерфейсов необходимо использовать ключевле слово implements
________необходимо переопределить методы абстрактного класса Car
public void move(){
System.out.println("Car is moving");
}
public void stop(){
System.out.println("Car is stop");
}
}

________Также все классы имеют модификатор доступа внутри пакета
________отсутствует интерфейс Engine для соблюдения принципа открытости\закрытости